{"ast":null,"code":"var _jsxFileName = \"/Users/evelioreilloespino/proyectos-react/curso-udemi/weather/weather/src/components/SearchMainn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../components/style.css\";\nimport WeatherDetails from './WeatherDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SearchMainn() {\n  _s();\n  //Esta función nos permite reconocer cada letra que se escriba en la barra de búsqueda\n  const [searchTerm, setSearchTerm] = useState(\"madrid\");\n  //    console.log(searchTerm)\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=4d9cbdff3ed5c57973cd02757d6a00a6`;\n      let res = await fetch(url);\n      let data = await res.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Buscar ciudad...\",\n          id: \"search\",\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        onClick: getWeatherInfo,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(WeatherDetails, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(SearchMainn, \"E5eLoCe7N8j4X3ppcQNm2CrGd9M=\");\n_c = SearchMainn;\nexport default SearchMainn;\nvar _c;\n$RefreshReg$(_c, \"SearchMainn\");","map":{"version":3,"names":["React","useEffect","useState","WeatherDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchMainn","_s","searchTerm","setSearchTerm","getWeatherInfo","url","res","fetch","data","json","console","log","error","children","className","type","placeholder","id","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/evelioreilloespino/proyectos-react/curso-udemi/weather/weather/src/components/SearchMainn.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport \"../components/style.css\"\nimport WeatherDetails from './WeatherDetails'\n\nfunction SearchMainn() {\n\n    //Esta función nos permite reconocer cada letra que se escriba en la barra de búsqueda\n   const  [searchTerm, setSearchTerm] = useState(\"madrid\")\n//    console.log(searchTerm)\n\n   const getWeatherInfo = async () => {\n    try {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=4d9cbdff3ed5c57973cd02757d6a00a6`\n        let res = await fetch(url);\n        let data = await res.json();\n        console.log(data)\n    } catch (error) {\n        console.log(error)\n    }\n\n   }\n\n   useEffect(() => {\n   getWeatherInfo()\n   }, [])\n\n  return (\n    <>\n    <div className='wrap'>\n        <div className=\"search\">\n            <input type=\"search\" placeholder='Buscar ciudad...' id='search' onChange = {(e) => setSearchTerm(e.target.value)}/>\n        </div>\n        <button className='searchButton' onClick = {getWeatherInfo}>Buscar</button>\n    </div>\n    <WeatherDetails/>\n    </>\n  )\n}\n\nexport default SearchMainn"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,yBAAyB;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB;EACD,MAAO,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC1D;;EAEG,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,IAAIC,GAAG,GAAI,qDAAoDH,UAAW,yCAAwC;MAClH,IAAII,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC1B,IAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC3BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EAED,CAAC;EAEDnB,SAAS,CAAC,MAAM;IAChBW,cAAc,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEP,oBACEP,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBhB,OAAA;QAAKiB,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnBhB,OAAA;UAAOkB,IAAI,EAAC,QAAQ;UAACC,WAAW,EAAC,kBAAkB;UAACC,EAAE,EAAC,QAAQ;UAACC,QAAQ,EAAKC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClH,CAAC,eACN5B,OAAA;QAAQiB,SAAS,EAAC,cAAc;QAACY,OAAO,EAAItB,cAAe;QAAAS,QAAA,EAAC;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACN5B,OAAA,CAACF,cAAc;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACf,CAAC;AAEP;AAACxB,EAAA,CAjCQD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAmCpB,eAAeA,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}