{"ast":null,"code":"var _jsxFileName = \"/Users/evelioreilloespino/proyectos-react/curso-udemi/weather/weather/src/components/SearchMainn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../components/style.css\";\nimport WeatherDetails from './WeatherDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SearchMainn() {\n  _s();\n  //Esta función nos permite reconocer cada letra que se escriba en la barra de búsqueda\n  const [searchTerm, setSearchTerm] = useState(\"madrid\");\n  //    console.log(searchTerm)\n\n  const [tempInfo, setTempInfo] = useState({});\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=4d9cbdff3ed5c57973cd02757d6a00a6`;\n      let res = await fetch(url);\n      let data = await res.json();\n      // console.log(data)\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weatherType\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weatherType,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Buscar ciudad...\",\n          id: \"search\",\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        onClick: getWeatherInfo,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(WeatherDetails, {\n      ...tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(SearchMainn, \"OwpwHmRP/U4OOW1GU0Xd/yb9Al8=\");\n_c = SearchMainn;\nexport default SearchMainn;\nvar _c;\n$RefreshReg$(_c, \"SearchMainn\");","map":{"version":3,"names":["React","useEffect","useState","WeatherDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchMainn","_s","searchTerm","setSearchTerm","tempInfo","setTempInfo","getWeatherInfo","url","res","fetch","data","json","temp","humidity","pressure","main","weatherType","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","error","console","log","children","className","type","placeholder","id","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/evelioreilloespino/proyectos-react/curso-udemi/weather/weather/src/components/SearchMainn.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport \"../components/style.css\"\nimport WeatherDetails from './WeatherDetails'\n\nfunction SearchMainn() {\n\n    //Esta función nos permite reconocer cada letra que se escriba en la barra de búsqueda\n   const  [searchTerm, setSearchTerm] = useState(\"madrid\")\n//    console.log(searchTerm)\n   \n   const [tempInfo, setTempInfo] = useState({})\n\n   const getWeatherInfo = async () => {\n    try {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=4d9cbdff3ed5c57973cd02757d6a00a6`\n        let res = await fetch(url);\n        let data = await res.json();\n        // console.log(data)\n        const {temp, humidity, pressure } = data.main;\n        const {main: weatherType} = data.weather[0];\n        const {name} = data;\n        const {speed} = data.wind\n        const {country, sunset} = data.sys;\n\n        const myNewWeatherInfo = {\n            temp, \n            humidity,\n            pressure,\n            weatherType,\n            name, \n            speed,\n            country,\n            sunset,\n        }\n\n        setTempInfo(myNewWeatherInfo)\n\n    } catch (error) {\n        console.log(error)\n    }\n\n   }\n\n   useEffect(() => {\n   getWeatherInfo()\n   }, [])\n\n  return (\n    <>\n    <div className='wrap'>\n        <div className=\"search\">\n            <input type=\"search\" placeholder='Buscar ciudad...' id='search' onChange = {(e) => setSearchTerm(e.target.value)}/>\n        </div>\n        <button className='searchButton' onClick = {getWeatherInfo}>Buscar</button>\n    </div>\n    {/* Esta es la página de detalles del tiempo */}\n    <WeatherDetails {...tempInfo}/>\n    </>\n  )\n}\n\nexport default SearchMainn"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,yBAAyB;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB;EACD,MAAO,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC1D;;EAEG,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,IAAIC,GAAG,GAAI,qDAAoDL,UAAW,yCAAwC;MAClH,IAAIM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC1B,IAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC3B;MACA,MAAM;QAACC,IAAI;QAAEC,QAAQ;QAAEC;MAAS,CAAC,GAAGJ,IAAI,CAACK,IAAI;MAC7C,MAAM;QAACA,IAAI,EAAEC;MAAW,CAAC,GAAGN,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC;MAC3C,MAAM;QAACC;MAAI,CAAC,GAAGR,IAAI;MACnB,MAAM;QAACS;MAAK,CAAC,GAAGT,IAAI,CAACU,IAAI;MACzB,MAAM;QAACC,OAAO;QAAEC;MAAM,CAAC,GAAGZ,IAAI,CAACa,GAAG;MAElC,MAAMC,gBAAgB,GAAG;QACrBZ,IAAI;QACJC,QAAQ;QACRC,QAAQ;QACRE,WAAW;QACXE,IAAI;QACJC,KAAK;QACLE,OAAO;QACPC;MACJ,CAAC;MAEDjB,WAAW,CAACmB,gBAAgB,CAAC;IAEjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EAED,CAAC;EAEDhC,SAAS,CAAC,MAAM;IAChBa,cAAc,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEP,oBACET,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACA/B,OAAA;MAAKgC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjB/B,OAAA;QAAKgC,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnB/B,OAAA;UAAOiC,IAAI,EAAC,QAAQ;UAACC,WAAW,EAAC,kBAAkB;UAACC,EAAE,EAAC,QAAQ;UAACC,QAAQ,EAAKC,CAAC,IAAK/B,aAAa,CAAC+B,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClH,CAAC,eACN3C,OAAA;QAAQgC,SAAS,EAAC,cAAc;QAACY,OAAO,EAAInC,cAAe;QAAAsB,QAAA,EAAC;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eAEN3C,OAAA,CAACF,cAAc;MAAA,GAAKS;IAAQ;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7B,CAAC;AAEP;AAACvC,EAAA,CAvDQD,WAAW;AAAA0C,EAAA,GAAX1C,WAAW;AAyDpB,eAAeA,WAAW;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}